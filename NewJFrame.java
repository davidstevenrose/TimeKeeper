/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package innovation;

import java.io.*;
import java.util.*;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author drose
 */
interface InnovationInterface {
    /*the Object class has a compareTo method, however the implemented classes 
    will share abstract versions of this method that is uniquely defined in
    each respective class.
    */
    public abstract void compareTo(int a, int b);
}

public class NewJFrame extends javax.swing.JFrame implements InnovationInterface {

    private int ID = 1;
    DefaultTableModel model;
    String filePath;
    private int fileNumber = 0;

    public NewJFrame() {
        initComponents();

        model = (DefaultTableModel) table.getModel();

    }

    public static int toSeconds(int min, int sec) {
        return (min * 60) + sec;
    }

    public static int toSeconds(String s) {
        try {
            int min = Integer.parseInt(s.substring(0, 2));
            int sec = Integer.parseInt(s.substring(3, 5));
            return (min * 60) + sec;
        } catch (Exception e) {
            System.out.println(e.toString());
            return 0;
        }
    }

    public static String toMinutes(int seconds) {
        int min = Math.floorDiv(seconds, 60);
        int sec = Math.floorMod(seconds, 60);
        return String.format("%02d:%02d", min, sec);
    }

    public void close() {
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

    public void compareTo(int a, int b) {
        String firstName = (String) model.getValueAt(a - 1, 1);
        int firstTime = toSeconds((String) model.getValueAt(a - 1, 3));
        String secondName = (String) model.getValueAt(b - 1, 1);
        int secondTime = toSeconds((String) model.getValueAt(b - 1, 3));
        if (firstTime > secondTime) {//firstName came in second
            JOptionPane.showMessageDialog(null, secondName + " beat " + firstName + " by " + (firstTime - secondTime) + "  seconds!", "Results", JOptionPane.INFORMATION_MESSAGE);
        } else if (firstTime < secondTime) {//secondName came in first
            JOptionPane.showMessageDialog(null, firstName + " beat " + secondName + " by " + (secondTime - firstTime) + "  seconds!", "Results", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, firstName + " and " + secondName + " had a tie of " + firstTime + " seconds!", "Results", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        compareToFrame = new javax.swing.JFrame();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        firstID = new javax.swing.JTextField();
        secondID = new javax.swing.JTextField();
        compareToFrameOK = new javax.swing.JButton();
        compareToFrameCancel = new javax.swing.JButton();
        aboutFrame = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        toSheetFrame = new javax.swing.JFrame();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        toSheetOption = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        intMin = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        intSec = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        intAge = new javax.swing.JTextField();
        insertButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        winnerButton = new javax.swing.JButton();
        compareTimeShortcut = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        fileNew = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        fileSave = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        fileOpen = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        filePrint = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        fileClose = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        changeData = new javax.swing.JMenu();
        changeName = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        changeTime = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        compareTime = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();
        aboutItem = new javax.swing.JMenuItem();

        compareToFrame.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        compareToFrame.setTitle("Compare Two Names");
        compareToFrame.setResizable(false);
        compareToFrame.setSize(new java.awt.Dimension(300, 200));

        jLabel7.setText("First ID");

        jLabel8.setText("Second ID");

        firstID.setText("1");

        secondID.setText("2");

        compareToFrameOK.setText("O.K.");
        compareToFrameOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareToFrameOKActionPerformed(evt);
            }
        });

        compareToFrameCancel.setText("CANCEL");
        compareToFrameCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareToFrameCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout compareToFrameLayout = new javax.swing.GroupLayout(compareToFrame.getContentPane());
        compareToFrame.getContentPane().setLayout(compareToFrameLayout);
        compareToFrameLayout.setHorizontalGroup(
            compareToFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(compareToFrameLayout.createSequentialGroup()
                .addGroup(compareToFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(compareToFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(compareToFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(firstID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(compareToFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(secondID, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(compareToFrameLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(compareToFrameOK)
                        .addGap(18, 18, 18)
                        .addComponent(compareToFrameCancel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        compareToFrameLayout.setVerticalGroup(
            compareToFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(compareToFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(compareToFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(compareToFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(compareToFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compareToFrameOK)
                    .addComponent(compareToFrameCancel))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        aboutFrame.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        aboutFrame.setTitle("Compare Two Names");
        aboutFrame.setResizable(false);
        aboutFrame.setSize(new java.awt.Dimension(500, 300));

        jTextPane2.setEditable(false);
        jTextPane2.setContentType("text/html"); // NOI18N
        jTextPane2.setText("<html>\n  <head>\n\n    <style>\n\tbody {\n\tbackground-color: #f9fca9;\n\t}\n\th1{\n\tfont-family: Arial, Helvetica, sans-serif;\n\tfont-style: italic;\n\ttext-align: center;\n\t}\n\ti{\n\tfont-style: italic;\n\t}\n\tp.c{\n\ttext-align: center;\n\tmargin-top: 0;\n\tmargin-bottom: 0;\n\t}\n    </style>\n  </head>\n  <body>\n    <h1><b>About This GUI</b></h1>\n\t<p>This is my first fully functional GUI devloped using the NetBeans IDE.\n\tThe version of this GUI you are using is in pre-alpha, so it looks pretty dull.\n\tThe files that this GUI reads have the file extension <i>\".ANDANOTHERONE\"</i>.\n\tFuture updates I hope I can work on include making the GUI less dull and improving \n\tthe <i>Open</i> and <i>Save</i> functions. Thank you for using my GUI.\n\t</p><hr>\n\t<p class=\"c\">Vitis my website: <a href=\"https://bit.ly/2FcWlMQ\" target=\"_top\">https://bit.ly/2FcWlMQ</a>\n\t</p>\n  </body>\n</html>\n");
        jTextPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextPane2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTextPane2);

        javax.swing.GroupLayout aboutFrameLayout = new javax.swing.GroupLayout(aboutFrame.getContentPane());
        aboutFrame.getContentPane().setLayout(aboutFrameLayout);
        aboutFrameLayout.setHorizontalGroup(
            aboutFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                .addContainerGap())
        );
        aboutFrameLayout.setVerticalGroup(
            aboutFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                .addContainerGap())
        );

        toSheetFrame.setTitle("Sheet Properties");
        toSheetFrame.setResizable(false);
        toSheetFrame.setSize(new java.awt.Dimension(450, 200));

        jLabel17.setText("List Order");

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        toSheetOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Save By ID", "Save By Shortest Ordered Time", "Save By Longest Ordered Time" }));
        toSheetOption.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(toSheetOption, 0, 275, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(toSheetOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton2.setText("Save As Sheet");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout toSheetFrameLayout = new javax.swing.GroupLayout(toSheetFrame.getContentPane());
        toSheetFrame.getContentPane().setLayout(toSheetFrameLayout);
        toSheetFrameLayout.setHorizontalGroup(
            toSheetFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toSheetFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(toSheetFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(toSheetFrameLayout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(toSheetFrameLayout.createSequentialGroup()
                        .addGroup(toSheetFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 88, Short.MAX_VALUE)))
                .addContainerGap())
        );
        toSheetFrameLayout.setVerticalGroup(
            toSheetFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toSheetFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(toSheetFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Time Keeper");
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        jLabel6.setText("Table of Persons.");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Age", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(table);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel2MouseExited(evt);
            }
        });

        jLabel3.setText("Time");

        intMin.setText("0");
        intMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intMinActionPerformed(evt);
            }
        });

        jLabel4.setText(":");

        intSec.setText("00");

        jLabel5.setText("(Minutes, Seconds)");

        jLabel1.setText("Name");

        jLabel2.setText("Age");

        intAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intAgeActionPerformed(evt);
            }
        });

        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(intMin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(intAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(intSec, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addComponent(insertButton))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(intAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(intMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(intSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(insertButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        jLabel9.setText("Add to Table");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        winnerButton.setText("Get First Place");
        winnerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                winnerButtonActionPerformed(evt);
            }
        });

        compareTimeShortcut.setText("Compare Two Times");
        compareTimeShortcut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareTimeShortcutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(winnerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(compareTimeShortcut)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(winnerButton)
                    .addComponent(compareTimeShortcut))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei UI", 0, 18)); // NOI18N
        jLabel10.setText("Quick Actions");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel12.setText("T");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setText("ime");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        jLabel14.setText("K");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel15.setText("eeper");

        jLabel16.setText("Version Pre-Alpha");

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innovation/gearImage.png"))); // NOI18N

        fileMenu.setText("File");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        fileNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        fileNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innovation/new-file-icon (1).png"))); // NOI18N
        fileNew.setText("New");
        fileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNewActionPerformed(evt);
            }
        });
        fileMenu.add(fileNew);
        fileMenu.add(jSeparator1);

        fileSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        fileSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innovation/Actions-document-save-icon.png"))); // NOI18N
        fileSave.setText("Save");
        fileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSaveActionPerformed(evt);
            }
        });
        fileMenu.add(fileSave);
        fileMenu.add(jSeparator2);

        fileOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        fileOpen.setIcon(new javax.swing.ImageIcon("C:\\Users\\drose\\Downloads\\if_document-open_118911.png")); // NOI18N
        fileOpen.setText("Open");
        fileOpen.setToolTipText("Make sure to save your table!");
        fileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileOpenActionPerformed(evt);
            }
        });
        fileMenu.add(fileOpen);
        fileMenu.add(jSeparator5);

        filePrint.setText("Save as a Sheet");
        filePrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePrintActionPerformed(evt);
            }
        });
        fileMenu.add(filePrint);
        fileMenu.add(jSeparator7);

        fileClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        fileClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/innovation/Button-Close-icon.png"))); // NOI18N
        fileClose.setText("Close");
        fileClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileCloseActionPerformed(evt);
            }
        });
        fileMenu.add(fileClose);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");

        changeData.setText("Change Table Data");

        changeName.setText("Change Name");
        changeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeNameActionPerformed(evt);
            }
        });
        changeData.add(changeName);
        changeData.add(jSeparator4);

        changeTime.setText("Change Time");
        changeTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeTimeActionPerformed(evt);
            }
        });
        changeData.add(changeTime);

        editMenu.add(changeData);
        editMenu.add(jSeparator3);

        compareTime.setText("Compare Two Times");
        compareTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compareTimeActionPerformed(evt);
            }
        });
        editMenu.add(compareTime);

        jMenuBar1.add(editMenu);

        aboutMenu.setText("About");
        aboutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuActionPerformed(evt);
            }
        });

        aboutItem.setText("About");
        aboutItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutItemActionPerformed(evt);
            }
        });
        aboutMenu.add(aboutItem);

        jMenuBar1.add(aboutMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15))
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNewActionPerformed
        fileSaveActionPerformed(evt);
        txtName.setText("");
        intAge.setText("");
        intMin.setText("");
        intSec.setText("");
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }//GEN-LAST:event_fileNewActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        String name = txtName.getText();
        boolean valid = true;
        int age = 0;
        try {
            age = Integer.parseInt(intAge.getText());
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(null, "Invalid data for feild \"Age\".", "error", JOptionPane.ERROR_MESSAGE);
            valid = false;
        }
        int min = 0;
        try {
            min = Integer.parseInt(intMin.getText());
            if (min < 0) {
                JOptionPane.showMessageDialog(null, "Invalid time for feild \"Min\".", "error", JOptionPane.ERROR_MESSAGE);
                valid = false;
            }
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(null, "Invalid data for feild \"Min\".", "error", JOptionPane.ERROR_MESSAGE);
            valid = false;
        }
        int sec = 0;
        try {
            sec = Integer.parseInt(intSec.getText());
            if (sec >= 60 || sec < 0) {
                JOptionPane.showMessageDialog(null, "Invalid time for feild \"Sec\".", "error", JOptionPane.ERROR_MESSAGE);
                valid = false;
            }
        } catch (NumberFormatException numberFormatException) {
            JOptionPane.showMessageDialog(null, "Invalid data for feild \"Sec\".", "error", JOptionPane.ERROR_MESSAGE);
            valid = false;
        }
        String time = String.format("%02d:%02d", min, sec);
        if (valid) {
            model.insertRow(model.getRowCount(), new Object[]{ID++, name, age, time});
            txtName.setText("");
            intAge.setText("");
            intMin.setText("");
            intSec.setText("");
        }
    }//GEN-LAST:event_insertButtonActionPerformed

    private void winnerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_winnerButtonActionPerformed
        String[] arrName = new String[model.getRowCount()];
        int[] arrTime = new int[model.getRowCount()];
        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "There is no data in your table.");
            return;
        }
        for (int i = 0; i < model.getRowCount(); i++) {
            arrName[i] = (String) model.getValueAt(i, 1);
            arrTime[i] = toSeconds((String) model.getValueAt(i, 3));
        }
        /*Insertion Sort algorithm*/
        for (int j = 0; j < arrTime.length; j++) {
            for (int i = 0; i + 1 < arrTime.length; i++) {
                if (arrTime[i] > arrTime[i + 1]) {
                    int arrTime_i = arrTime[i];
                    String arrName_i = arrName[i];
                    arrTime[i] = arrTime[i + 1];
                    arrName[i] = arrName[i + 1];
                    arrTime[i + 1] = arrTime_i;
                    arrName[i + 1] = arrName_i;
                }
            }
        }
        JOptionPane.showMessageDialog(null, arrName[0] + " came in first with a time of " + toMinutes(arrTime[0]) + ".");
    }//GEN-LAST:event_winnerButtonActionPerformed

    private void fileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSaveActionPerformed
        String fileName = JOptionPane.showInputDialog(null, "Name your file.", "Save", JOptionPane.PLAIN_MESSAGE);
        String userName = JOptionPane.showInputDialog(null, "What is your user name on this computer?", "Save", JOptionPane.PLAIN_MESSAGE);

        filePath = "C:\\Users\\" + userName + "\\Documents\\TimeKeeper\\ANDANOTHERONE\\" + fileName + ".ANDANOTHERONE";
        File file = new File(filePath);
        File directory = new File("C:\\Users\\" + userName + "\\Documents\\TimeKeeper");
        File subDirectory = new File("C:\\Users\\" + userName + "\\Documents\\TimeKeeper\\ANDANOTHERONE");
        if (!directory.exists()) {
            if(directory.mkdir()){
                System.out.println("Sucess");
            }else{
                System.out.println("Fail");
            }
        }
        if (!subDirectory.exists()) {
            if(subDirectory.mkdir()){
                System.out.println("Sucess");
            }else{
                System.out.println("Fail");
            }
        }
        if (!file.exists() && userName != null && fileName != null) {
            try {
                if(file.createNewFile()&&file.mkdir()){
                    System.out.println("Sucess");
                }else{
                    System.out.println("Fail");
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "You entered an invalid user name or file name. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "That file name already exists. Please try a different name.", "Alert", JOptionPane.INFORMATION_MESSAGE);
        }
        try {
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < table.getRowCount(); i++) {
                for (int j = 0; j < table.getColumnCount(); j++) {
                    if (j == 1) {
                        bw.write(table.getValueAt(i, j).toString().replaceAll("[ ]+", "?") + " ");
                    } else {
                        bw.write(table.getValueAt(i, j).toString() + " ");
                    }
                }
                bw.newLine();
            }
            bw.write(".EOF");
            bw.newLine();
            bw.write("=====end of file=====");

            bw.close();
            fw.close();
            JOptionPane.showMessageDialog(null, "saved to a text file at: " + filePath);

        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fileSaveActionPerformed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased

    }//GEN-LAST:event_formMouseReleased

    private void fileCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileCloseActionPerformed
        close();
    }//GEN-LAST:event_fileCloseActionPerformed

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuActionPerformed

    private void changeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeNameActionPerformed
        //note: method should be modified for multiple people with the same name.
        int id = Integer.parseInt(JOptionPane.showInputDialog(null, "What is the ID of your person?", "Change Name", JOptionPane.QUESTION_MESSAGE));
        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "There is no data in the table.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (id >= ID) {
                JOptionPane.showMessageDialog(null, "The ID excedes the number of people in the table.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                String name = JOptionPane.showInputDialog(null, "What is the name of your person?", "Change Player Name", JOptionPane.QUESTION_MESSAGE);
                model.setValueAt(name, id - 1, 1);
                JOptionPane.showMessageDialog(null, "Data changed.", "Notice", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_changeNameActionPerformed

    private void changeTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeTimeActionPerformed
        int id = Integer.parseInt(JOptionPane.showInputDialog(null, "What is the ID of your person?", "Change Person Data", JOptionPane.QUESTION_MESSAGE));
        String time = JOptionPane.showInputDialog(null, "What is the time of your person? Type your time in MM:SS.", "Change Person Data", JOptionPane.QUESTION_MESSAGE);
        if (toSeconds(time) == 0 || id >= ID) {
            JOptionPane.showMessageDialog(null, "You have entered an invalid ID or time.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (model.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "There is no data in the table.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            boolean found = false;
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(i, 0).equals(id)) {
                    model.setValueAt(toMinutes(toSeconds(time)), i, 3);
                    found = true;
                    break;
                }
            }
            if (found) {
                JOptionPane.showMessageDialog(null, "Data changed.", "Notice", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Person not found!", "Notice", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_changeTimeActionPerformed

    private void intAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_intAgeActionPerformed

    private void fileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileOpenActionPerformed
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        ID = 1;
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("ANDANOTHERONE files", "ANDANOTHERONE");
        chooser.setFileFilter(filter);
        chooser.showOpenDialog(null);
        String fileLocation = chooser.getSelectedFile().toString();
        File file = new File(fileLocation);
        try {
            FileReader ft = new FileReader(file);
            Scanner check = new Scanner(ft);
            Scanner in = new Scanner(new FileReader(file));
            while (check.hasNextLine()) {/*each line of data in text file*/
                if (check.nextLine().equals(".EOF")) {/*checks if the current line is end of file*/
                    System.out.println("End of File.");
                    break;
                } else {
                    int id = in.nextInt();
                    String name = in.next();
                    int age = in.nextInt();
                    String time = in.next();
                    model.insertRow(model.getRowCount(), new Object[]{id, name.replaceAll("[?]+", " "), age, time});
                    ID++;
                }
            }
            in.close();
            check.close();
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "That file was not found.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NoSuchElementException e) {
            JOptionPane.showMessageDialog(null, "Error with reading your file.", "Error", JOptionPane.INFORMATION_MESSAGE);
            System.out.println(e.getMessage());
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_fileOpenActionPerformed

    private void intMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_intMinActionPerformed

    private void compareToFrameCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareToFrameCancelActionPerformed
        compareToFrame.setVisible(false);
    }//GEN-LAST:event_compareToFrameCancelActionPerformed

    private void compareToFrameOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareToFrameOKActionPerformed
        try {
            int a = Integer.parseInt(firstID.getText());
            int b = Integer.parseInt(secondID.getText());
            compareTo(a, b);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "You have entered something other than a number. PLease try again.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You have entered an ID that dosen't exist. PLease try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_compareToFrameOKActionPerformed

    private void compareTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareTimeActionPerformed
        if (!compareToFrame.isVisible()) {
            compareToFrame.setVisible(true);
            compareToFrame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        }
    }//GEN-LAST:event_compareTimeActionPerformed

    private void compareTimeShortcutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compareTimeShortcutActionPerformed
        compareTimeActionPerformed(evt);
    }//GEN-LAST:event_compareTimeShortcutActionPerformed

    private void tableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseEntered

    }//GEN-LAST:event_tableMouseEntered

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered

    }//GEN-LAST:event_jPanel2MouseEntered

    private void jPanel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseExited

    }//GEN-LAST:event_jPanel2MouseExited

    private void aboutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutMenuActionPerformed

    private void aboutItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutItemActionPerformed
        if (!aboutFrame.isVisible()) {
            aboutFrame.setVisible(true);
            aboutFrame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        }
    }//GEN-LAST:event_aboutItemActionPerformed

    private void jTextPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextPane2MouseClicked
        try {
            String URL = "https://bit.ly/2FcWlMQ";
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Could not create webpage.");
        }
    }//GEN-LAST:event_jTextPane2MouseClicked

    private void filePrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePrintActionPerformed
        if (!toSheetFrame.isVisible()) {
            toSheetFrame.setVisible(true);
            toSheetFrame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        }
    }//GEN-LAST:event_filePrintActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        toSheetFrame.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String userName = JOptionPane.showInputDialog(null, "What is your user name on this computer?", "Sheet", JOptionPane.PLAIN_MESSAGE);
        String name = JOptionPane.showInputDialog(null, "What is the name of your file?", "Sheet", JOptionPane.PLAIN_MESSAGE);
        String filePath = "C:\\Users\\" + userName + "\\Documents\\TimeKeeper\\Printed Lists\\" + name + ".txt";
        File directory = new File("C:\\Users\\" + userName + "\\Documents\\TimeKeeper");
        File subDirectory = new File("C:\\Users\\" + userName + "\\Documents\\TimeKeeper\\Printed Lists");
        int[] arrID = new int[model.getRowCount()];
        int[] arrTime = new int[model.getRowCount()];
        if (!directory.exists()&& userName != null) {
            if(directory.mkdir()){
                System.out.println("Sucess");
            }else{
                System.out.println("directory not created");
            }
        }
        if (!subDirectory.exists()&& userName != null) {
            if(subDirectory.mkdir()){
                System.out.println("Sucess");
            }else{
                System.out.println("subdirectory not created");
            }
        }
        File f = new File(filePath);
        if (!f.exists() && userName != null) {
            try {
                if(f.createNewFile()&&f.mkdir()){
                    System.out.println("Sucess");
                }else{
                    System.out.println("file failed to be created");
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "You entered an invalid user name or file name. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        } else {
            if(JOptionPane.showConfirmDialog(null, "There is a file with a similar name. Do you want to override that file?", "Warning", JOptionPane.YES_NO_OPTION)==1){
                jButton2ActionPerformed(evt);
                return;
            }
            
        }
        if (toSheetOption.getSelectedIndex()==0 && model.getRowCount() > 0) {
            try {
                FileWriter fw = new FileWriter(f);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write("Date of this Print: " + java.time.LocalDate.now());
                bw.newLine();
                bw.newLine();
                bw.write("ID  Name                          Age  Time  ");
                bw.newLine();
                for (int i = 0; i < model.getRowCount(); i++) {
                    bw.write(String.format("%-3d", model.getValueAt(i, 0)) + "|"//ID                            
                            + String.format("%-30s", model.getValueAt(i, 1)) + "|"//Name
                            + String.format("%-2d", model.getValueAt(i, 2)) + "|"//Age
                            + String.format("%s", model.getValueAt(i, 3)));//Time
                    bw.newLine();
                }
                bw.newLine();
                bw.write(ID - 1 + " people are listed on this sheet.");
                bw.close();
                fw.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "An error occured while creating the list.\n" + e.getCause(), "Error", JOptionPane.ERROR_MESSAGE);
                e.printStackTrace();
            }
        } else if (toSheetOption.getSelectedIndex()==1 && model.getRowCount() > 0) {
            try {
                FileWriter fw = new FileWriter(f);
                BufferedWriter bw = new BufferedWriter(fw);

                for (int i = 0; i < model.getRowCount(); i++) {
                    arrID[i] = (int) model.getValueAt(i, 0);
                    arrTime[i] = toSeconds((String) model.getValueAt(i, 3));
                }
                /*Insertion Sort algorithm*/
                for (int j = 0; j < arrTime.length; j++) {
                    for (int i = 0; i + 1 < arrTime.length; i++) {
                        if (arrTime[i] > arrTime[i + 1]) {
                            int arrTime_i = arrTime[i];
                            int arrID_i = arrID[i];
                            arrTime[i] = arrTime[i + 1];
                            arrID[i] = arrID[i + 1];
                            arrTime[i + 1] = arrTime_i;
                            arrID[i + 1] = arrID_i;
                        }
                    }
                }

                bw.write("Date of this Print: " + java.time.LocalDate.now());
                bw.newLine();
                bw.newLine();
                bw.write("ID  Name                          Age  Time  ");
                bw.newLine();
                for (int i = 0; i < model.getRowCount(); i++) {
                    bw.write(String.format("%-3d", model.getValueAt(arrID[i] - 1, 0)) + "|"//ID                            
                            + String.format("%-30s", model.getValueAt(arrID[i] - 1, 1)) + "|"//Name
                            + String.format("%-2d", model.getValueAt(arrID[i] - 1, 2)) + "|"//Age
                            + String.format("%s", model.getValueAt(arrID[i] - 1, 3)));//Time
                    bw.newLine();
                }
                bw.newLine();
                bw.write(ID - 1 + " people are listed on this sheet.");
                bw.close();
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (toSheetOption.getSelectedIndex()==2 && model.getRowCount() > 0) {
            try {
                FileWriter fw = new FileWriter(f);
                BufferedWriter bw = new BufferedWriter(fw);

                for (int i = 0; i < model.getRowCount(); i++) {
                    arrID[i] = (int) model.getValueAt(i, 0);
                    arrTime[i] = toSeconds((String) model.getValueAt(i, 3));
                }
                /*Insertion Sort algorithm*/
                for (int j = 0; j < arrTime.length; j++) {
                    for (int i = 0; i + 1 < arrTime.length; i++) {
                        if (arrTime[i] > arrTime[i + 1]) {
                            int arrTime_i = arrTime[i];
                            int arrID_i = arrID[i];
                            arrTime[i] = arrTime[i + 1];
                            arrID[i] = arrID[i + 1];
                            arrTime[i + 1] = arrTime_i;
                            arrID[i + 1] = arrID_i;
                        }
                    }
                }

                bw.write("Date of this Print: " + java.time.LocalDate.now());
                bw.newLine();
                bw.newLine();
                bw.write("ID  Name                          Age  Time  ");
                bw.newLine();
                for (int i = arrID.length - 1; i >= 0; i--) {
                    bw.write(String.format("%-3d", model.getValueAt(arrID[i] - 1, 0)) + "|"//ID                            
                            + String.format("%-30s", model.getValueAt(arrID[i] - 1, 1)) + "|"//Name
                            + String.format("%-2d", model.getValueAt(arrID[i] - 1, 2)) + "|"//Age
                            + String.format("%s", model.getValueAt(arrID[i] - 1, 3)));//Time
                    bw.newLine();
                }
                bw.newLine();
                bw.write(ID - 1 + " people are listed on this sheet.");
                bw.close();
                fw.close();
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "There is no data in your table.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        toSheetFrame.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        System.out.flush();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame aboutFrame;
    private javax.swing.JMenuItem aboutItem;
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JMenu changeData;
    private javax.swing.JMenuItem changeName;
    private javax.swing.JMenuItem changeTime;
    private javax.swing.JMenuItem compareTime;
    private javax.swing.JButton compareTimeShortcut;
    private javax.swing.JFrame compareToFrame;
    private javax.swing.JButton compareToFrameCancel;
    private javax.swing.JButton compareToFrameOK;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem fileClose;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem fileNew;
    private javax.swing.JMenuItem fileOpen;
    private javax.swing.JMenuItem filePrint;
    private javax.swing.JMenuItem fileSave;
    private javax.swing.JTextField firstID;
    private javax.swing.JButton insertButton;
    private javax.swing.JTextField intAge;
    private javax.swing.JTextField intMin;
    private javax.swing.JTextField intSec;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextField secondID;
    private javax.swing.JTable table;
    private javax.swing.JFrame toSheetFrame;
    private javax.swing.JComboBox<String> toSheetOption;
    private javax.swing.JTextField txtName;
    private javax.swing.JButton winnerButton;
    // End of variables declaration//GEN-END:variables
}
